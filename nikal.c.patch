--- nikal.c	2018-01-28 17:23:14.644991810 +0900
+++ nikal.new.c	2018-01-28 17:27:28.734989333 +0900
@@ -3533,8 +3533,13 @@
    }
 
    down_read(&(current->mm->mmap_sem));
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(4, 6, 0))
+   pagesMapped = get_user_pages((unsigned long) start,
+      sizeInPages,  0 , pages, NULL );
+#else
    pagesMapped = get_user_pages(current, current->mm, (unsigned long) start,
       sizeInPages, isWritable, 0 , pages, NULL );
+#endif
    up_read(&(current->mm->mmap_sem));
 
    if (pagesMapped < 0)
@@ -3544,8 +3549,13 @@
       {
          isWritable = 0;
          down_read(&(current->mm->mmap_sem));
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(4,6,0))
+         pagesMapped = get_user_pages((unsigned long) start,
+            sizeInPages, 0 , pages, NULL );
+#else
          pagesMapped = get_user_pages(current, current->mm, (unsigned long) start,
             sizeInPages, isWritable, 0 , pages, NULL );
+#endif
          up_read(&(current->mm->mmap_sem));
       }
       
@@ -3570,7 +3580,7 @@
    {
       if (!PageReserved(pages[pagesMapped-1]))
       {
-         page_cache_release(pages[pagesMapped-1]);
+         put_page(pages[pagesMapped-1]);
       }
    }
 
@@ -3595,7 +3605,7 @@
          if (isWritable) set_page_dirty(pages[pagesMapped-1]);
 
          
-         page_cache_release(pages[pagesMapped-1]);
+         put_page(pages[pagesMapped-1]);
       }
    }
    nNIKAL100_free(buffer);
@@ -7027,10 +7037,15 @@
    list->flags       = flags | nNIKAL220_kPageListFromUserBuffer;
 
    down_read(&current->mm->mmap_sem);
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(4, 6, 0))
+   pinned = get_user_pages((unsigned long)pointer,
+                           size,
+#else
    pinned = get_user_pages(current, current->mm,
                            (unsigned long) pointer,
                            size,
                            flags & nNIKAL220_kPageListAccessModeWrite,
+#endif
                            0, 
                            list->pages,
                            NULL );
